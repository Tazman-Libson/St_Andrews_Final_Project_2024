"0","#Log Liklihood Calculation Function"
"0","#Inputs:"
"0","#parvec: a model object as described above which has been transformed by mvn.n2w"
"0","#X: Observed Dataset"
"0","#m: number of states, a natural number"
"0","#n: dimensionality of state depenedent gaussians, a natural number"
"0","#stationary: boolean indicating if the model is stationary"
"0","#print: boolean indicating whether or not to print the given model and the calculated likelihood."
"0","mvn.HMM_mllk <- function(parvec, X, m, n, stationary, print = F){"
"0","  mod <- mvn.w2n(parvec, m, n, stationary) #Get model from working parameters"
"0","  if(!stationary){"
"0","    mod$ID <- sapply(mod$ID, FUN = threshold)"
"0","  }"
"0","  tpm <- mod$TPM"
"0","  t <- dim(X)[1] # number of observations"
"0","  phi <- mod$ID * diag(mvn.p_matrix(mod, X[1,])) #Start with "
"0","  l <- log(sum(phi)) #log likelihood"
"0","  phi <- phi/sum(phi)"
"0","  for(i in 2:t){"
"0","    v <- phi %*% tpm * diag(mvn.p_matrix(mod, X[i,]))"
"0","    u <- sum(v)"
"0","    l <- l + log(u)"
"0","    phi <- v/u #rescaled vector of forward probabilities"
"0","  }"
"0","  if(print){"
"0","    print(-l)"
"0","    print(mod)}"
"0","  return(-l)"
"0","}"
